{"ast":null,"code":"var _jsxFileName = \"/workspace/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport HomeScreen from './components/HomeScreen';\nimport AddMoneyScreen from './components/AddMoneyScreen';\nimport SelectRecipientScreen from './components/SelectRecipientScreen';\nimport EnterAmountScreen from './components/EnterAmountScreen';\nimport ConfirmTransferScreen from './components/ConfirmTransferScreen';\nimport ReceiptScreen from './components/ReceiptScreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SCREENS = {\n  HOME: 'home',\n  ADD_MONEY: 'add_money',\n  SELECT_RECIPIENT: 'select_recipient',\n  ENTER_AMOUNT: 'enter_amount',\n  CONFIRM_TRANSFER: 'confirm_transfer',\n  RECEIPT: 'receipt'\n};\nfunction App() {\n  _s();\n  const [currentScreen, setCurrentScreen] = useState(SCREENS.HOME);\n  const [balance, setBalance] = useState(1106900.63);\n  const [selectedRecipient, setSelectedRecipient] = useState(null);\n  const [transferAmount, setTransferAmount] = useState(0);\n  const [lastTransfer, setLastTransfer] = useState(null);\n\n  // Cargar datos del localStorage al iniciar\n  useEffect(() => {\n    const savedBalance = localStorage.getItem('balance');\n    if (savedBalance) {\n      setBalance(parseFloat(savedBalance));\n    }\n  }, []);\n\n  // Guardar balance en localStorage cuando cambie\n  useEffect(() => {\n    localStorage.setItem('balance', balance.toString());\n  }, [balance]);\n  const navigateToScreen = screen => {\n    setCurrentScreen(screen);\n  };\n  const handleAddMoney = amount => {\n    setBalance(prevBalance => prevBalance + amount);\n    setCurrentScreen(SCREENS.HOME);\n  };\n  const handleSelectRecipient = recipient => {\n    setSelectedRecipient(recipient);\n    setCurrentScreen(SCREENS.ENTER_AMOUNT);\n  };\n  const handleEnterAmount = amount => {\n    setTransferAmount(amount);\n    setCurrentScreen(SCREENS.CONFIRM_TRANSFER);\n  };\n  const handleConfirmTransfer = () => {\n    if (balance >= transferAmount) {\n      const newBalance = balance - transferAmount;\n      setBalance(newBalance);\n      const transfer = {\n        id: Date.now(),\n        recipient: selectedRecipient,\n        amount: transferAmount,\n        date: new Date(),\n        operationNumber: Math.floor(Math.random() * 1000000000000) + 100000000000,\n        identificationCode: Math.random().toString(36).substring(2, 11).toUpperCase() + Math.random().toString(36).substring(2, 11).toUpperCase()\n      };\n      setLastTransfer(transfer);\n      setCurrentScreen(SCREENS.RECEIPT);\n    }\n  };\n  const handleBackToHome = () => {\n    setCurrentScreen(SCREENS.HOME);\n    setSelectedRecipient(null);\n    setTransferAmount(0);\n    setLastTransfer(null);\n  };\n  const handleScanQR = () => {\n    // Simular apertura de c치mara\n    alert('Abriendo c치mara para escanear QR...');\n  };\n  const renderScreen = () => {\n    switch (currentScreen) {\n      case SCREENS.HOME:\n        return /*#__PURE__*/_jsxDEV(HomeScreen, {\n          balance: balance,\n          onAddMoney: () => navigateToScreen(SCREENS.ADD_MONEY),\n          onTransfer: () => navigateToScreen(SCREENS.SELECT_RECIPIENT),\n          onScanQR: handleScanQR\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this);\n      case SCREENS.ADD_MONEY:\n        return /*#__PURE__*/_jsxDEV(AddMoneyScreen, {\n          onConfirm: handleAddMoney,\n          onBack: () => navigateToScreen(SCREENS.HOME)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this);\n      case SCREENS.SELECT_RECIPIENT:\n        return /*#__PURE__*/_jsxDEV(SelectRecipientScreen, {\n          onSelectRecipient: handleSelectRecipient,\n          onBack: () => navigateToScreen(SCREENS.HOME)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this);\n      case SCREENS.ENTER_AMOUNT:\n        return /*#__PURE__*/_jsxDEV(EnterAmountScreen, {\n          balance: balance,\n          onConfirm: handleEnterAmount,\n          onBack: () => navigateToScreen(SCREENS.SELECT_RECIPIENT)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this);\n      case SCREENS.CONFIRM_TRANSFER:\n        return /*#__PURE__*/_jsxDEV(ConfirmTransferScreen, {\n          recipient: selectedRecipient,\n          amount: transferAmount,\n          balance: balance,\n          onConfirm: handleConfirmTransfer,\n          onBack: () => navigateToScreen(SCREENS.ENTER_AMOUNT)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this);\n      case SCREENS.RECEIPT:\n        return /*#__PURE__*/_jsxDEV(ReceiptScreen, {\n          transfer: lastTransfer,\n          onBack: handleBackToHome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(HomeScreen, {\n          balance: balance,\n          onAddMoney: () => navigateToScreen(SCREENS.ADD_MONEY),\n          onTransfer: () => navigateToScreen(SCREENS.SELECT_RECIPIENT),\n          onScanQR: handleScanQR\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: renderScreen()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BtQ2ZAaytMXjSh/kTxmiB24XVfI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","HomeScreen","AddMoneyScreen","SelectRecipientScreen","EnterAmountScreen","ConfirmTransferScreen","ReceiptScreen","jsxDEV","_jsxDEV","SCREENS","HOME","ADD_MONEY","SELECT_RECIPIENT","ENTER_AMOUNT","CONFIRM_TRANSFER","RECEIPT","App","_s","currentScreen","setCurrentScreen","balance","setBalance","selectedRecipient","setSelectedRecipient","transferAmount","setTransferAmount","lastTransfer","setLastTransfer","savedBalance","localStorage","getItem","parseFloat","setItem","toString","navigateToScreen","screen","handleAddMoney","amount","prevBalance","handleSelectRecipient","recipient","handleEnterAmount","handleConfirmTransfer","newBalance","transfer","id","Date","now","date","operationNumber","Math","floor","random","identificationCode","substring","toUpperCase","handleBackToHome","handleScanQR","alert","renderScreen","onAddMoney","onTransfer","onScanQR","fileName","_jsxFileName","lineNumber","columnNumber","onConfirm","onBack","onSelectRecipient","className","children","_c","$RefreshReg$"],"sources":["/workspace/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport HomeScreen from './components/HomeScreen';\nimport AddMoneyScreen from './components/AddMoneyScreen';\nimport SelectRecipientScreen from './components/SelectRecipientScreen';\nimport EnterAmountScreen from './components/EnterAmountScreen';\nimport ConfirmTransferScreen from './components/ConfirmTransferScreen';\nimport ReceiptScreen from './components/ReceiptScreen';\n\nconst SCREENS = {\n  HOME: 'home',\n  ADD_MONEY: 'add_money',\n  SELECT_RECIPIENT: 'select_recipient',\n  ENTER_AMOUNT: 'enter_amount',\n  CONFIRM_TRANSFER: 'confirm_transfer',\n  RECEIPT: 'receipt'\n};\n\nfunction App() {\n  const [currentScreen, setCurrentScreen] = useState(SCREENS.HOME);\n  const [balance, setBalance] = useState(1106900.63);\n  const [selectedRecipient, setSelectedRecipient] = useState(null);\n  const [transferAmount, setTransferAmount] = useState(0);\n  const [lastTransfer, setLastTransfer] = useState(null);\n\n  // Cargar datos del localStorage al iniciar\n  useEffect(() => {\n    const savedBalance = localStorage.getItem('balance');\n    if (savedBalance) {\n      setBalance(parseFloat(savedBalance));\n    }\n  }, []);\n\n  // Guardar balance en localStorage cuando cambie\n  useEffect(() => {\n    localStorage.setItem('balance', balance.toString());\n  }, [balance]);\n\n  const navigateToScreen = (screen) => {\n    setCurrentScreen(screen);\n  };\n\n  const handleAddMoney = (amount) => {\n    setBalance(prevBalance => prevBalance + amount);\n    setCurrentScreen(SCREENS.HOME);\n  };\n\n  const handleSelectRecipient = (recipient) => {\n    setSelectedRecipient(recipient);\n    setCurrentScreen(SCREENS.ENTER_AMOUNT);\n  };\n\n  const handleEnterAmount = (amount) => {\n    setTransferAmount(amount);\n    setCurrentScreen(SCREENS.CONFIRM_TRANSFER);\n  };\n\n  const handleConfirmTransfer = () => {\n    if (balance >= transferAmount) {\n      const newBalance = balance - transferAmount;\n      setBalance(newBalance);\n      \n      const transfer = {\n        id: Date.now(),\n        recipient: selectedRecipient,\n        amount: transferAmount,\n        date: new Date(),\n        operationNumber: Math.floor(Math.random() * 1000000000000) + 100000000000,\n        identificationCode: Math.random().toString(36).substring(2, 11).toUpperCase() + Math.random().toString(36).substring(2, 11).toUpperCase()\n      };\n      \n      setLastTransfer(transfer);\n      setCurrentScreen(SCREENS.RECEIPT);\n    }\n  };\n\n  const handleBackToHome = () => {\n    setCurrentScreen(SCREENS.HOME);\n    setSelectedRecipient(null);\n    setTransferAmount(0);\n    setLastTransfer(null);\n  };\n\n  const handleScanQR = () => {\n    // Simular apertura de c치mara\n    alert('Abriendo c치mara para escanear QR...');\n  };\n\n  const renderScreen = () => {\n    switch (currentScreen) {\n      case SCREENS.HOME:\n        return (\n          <HomeScreen \n            balance={balance}\n            onAddMoney={() => navigateToScreen(SCREENS.ADD_MONEY)}\n            onTransfer={() => navigateToScreen(SCREENS.SELECT_RECIPIENT)}\n            onScanQR={handleScanQR}\n          />\n        );\n      case SCREENS.ADD_MONEY:\n        return (\n          <AddMoneyScreen \n            onConfirm={handleAddMoney}\n            onBack={() => navigateToScreen(SCREENS.HOME)}\n          />\n        );\n      case SCREENS.SELECT_RECIPIENT:\n        return (\n          <SelectRecipientScreen \n            onSelectRecipient={handleSelectRecipient}\n            onBack={() => navigateToScreen(SCREENS.HOME)}\n          />\n        );\n      case SCREENS.ENTER_AMOUNT:\n        return (\n          <EnterAmountScreen \n            balance={balance}\n            onConfirm={handleEnterAmount}\n            onBack={() => navigateToScreen(SCREENS.SELECT_RECIPIENT)}\n          />\n        );\n      case SCREENS.CONFIRM_TRANSFER:\n        return (\n          <ConfirmTransferScreen \n            recipient={selectedRecipient}\n            amount={transferAmount}\n            balance={balance}\n            onConfirm={handleConfirmTransfer}\n            onBack={() => navigateToScreen(SCREENS.ENTER_AMOUNT)}\n          />\n        );\n      case SCREENS.RECEIPT:\n        return (\n          <ReceiptScreen \n            transfer={lastTransfer}\n            onBack={handleBackToHome}\n          />\n        );\n      default:\n        return (\n          <HomeScreen \n            balance={balance}\n            onAddMoney={() => navigateToScreen(SCREENS.ADD_MONEY)}\n            onTransfer={() => navigateToScreen(SCREENS.SELECT_RECIPIENT)}\n            onScanQR={handleScanQR}\n          />\n        );\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      {renderScreen()}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}