{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./App.css';import HomeScreen from'./components/HomeScreen';import AddMoneyScreen from'./components/AddMoneyScreen';import SelectRecipientScreen from'./components/SelectRecipientScreen';import EnterAmountScreen from'./components/EnterAmountScreen';import ConfirmTransferScreen from'./components/ConfirmTransferScreen';import ReceiptScreen from'./components/ReceiptScreen';import{jsx as _jsx}from\"react/jsx-runtime\";const SCREENS={HOME:'home',ADD_MONEY:'add_money',SELECT_RECIPIENT:'select_recipient',ENTER_AMOUNT:'enter_amount',CONFIRM_TRANSFER:'confirm_transfer',RECEIPT:'receipt'};function App(){const[currentScreen,setCurrentScreen]=useState(SCREENS.HOME);const[balance,setBalance]=useState(1106900.63);const[selectedRecipient,setSelectedRecipient]=useState(null);const[transferAmount,setTransferAmount]=useState(0);const[lastTransfer,setLastTransfer]=useState(null);// Cargar datos del localStorage al iniciar\nuseEffect(()=>{const savedBalance=localStorage.getItem('balance');if(savedBalance){setBalance(parseFloat(savedBalance));}},[]);// Guardar balance en localStorage cuando cambie\nuseEffect(()=>{localStorage.setItem('balance',balance.toString());},[balance]);const navigateToScreen=screen=>{setCurrentScreen(screen);};const handleAddMoney=amount=>{setBalance(prevBalance=>prevBalance+amount);setCurrentScreen(SCREENS.HOME);};const handleSelectRecipient=recipient=>{setSelectedRecipient(recipient);setCurrentScreen(SCREENS.ENTER_AMOUNT);};const handleEnterAmount=amount=>{setTransferAmount(amount);setCurrentScreen(SCREENS.CONFIRM_TRANSFER);};const handleConfirmTransfer=()=>{if(balance>=transferAmount){const newBalance=balance-transferAmount;setBalance(newBalance);const transfer={id:Date.now(),recipient:selectedRecipient,amount:transferAmount,date:new Date(),operationNumber:Math.floor(Math.random()*1000000000000)+100000000000,identificationCode:Math.random().toString(36).substring(2,11).toUpperCase()+Math.random().toString(36).substring(2,11).toUpperCase()};setLastTransfer(transfer);setCurrentScreen(SCREENS.RECEIPT);}};const handleBackToHome=()=>{setCurrentScreen(SCREENS.HOME);setSelectedRecipient(null);setTransferAmount(0);setLastTransfer(null);};const handleScanQR=()=>{// Simular apertura de c치mara\nalert('Abriendo c치mara para escanear QR...');};const renderScreen=()=>{switch(currentScreen){case SCREENS.HOME:return/*#__PURE__*/_jsx(HomeScreen,{balance:balance,onAddMoney:()=>navigateToScreen(SCREENS.ADD_MONEY),onTransfer:()=>navigateToScreen(SCREENS.SELECT_RECIPIENT),onScanQR:handleScanQR});case SCREENS.ADD_MONEY:return/*#__PURE__*/_jsx(AddMoneyScreen,{onConfirm:handleAddMoney,onBack:()=>navigateToScreen(SCREENS.HOME)});case SCREENS.SELECT_RECIPIENT:return/*#__PURE__*/_jsx(SelectRecipientScreen,{onSelectRecipient:handleSelectRecipient,onBack:()=>navigateToScreen(SCREENS.HOME)});case SCREENS.ENTER_AMOUNT:return/*#__PURE__*/_jsx(EnterAmountScreen,{balance:balance,onConfirm:handleEnterAmount,onBack:()=>navigateToScreen(SCREENS.SELECT_RECIPIENT)});case SCREENS.CONFIRM_TRANSFER:return/*#__PURE__*/_jsx(ConfirmTransferScreen,{recipient:selectedRecipient,amount:transferAmount,balance:balance,onConfirm:handleConfirmTransfer,onBack:()=>navigateToScreen(SCREENS.ENTER_AMOUNT)});case SCREENS.RECEIPT:return/*#__PURE__*/_jsx(ReceiptScreen,{transfer:lastTransfer,onBack:handleBackToHome});default:return/*#__PURE__*/_jsx(HomeScreen,{balance:balance,onAddMoney:()=>navigateToScreen(SCREENS.ADD_MONEY),onTransfer:()=>navigateToScreen(SCREENS.SELECT_RECIPIENT),onScanQR:handleScanQR});}};return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:renderScreen()});}export default App;","map":{"version":3,"names":["React","useState","useEffect","HomeScreen","AddMoneyScreen","SelectRecipientScreen","EnterAmountScreen","ConfirmTransferScreen","ReceiptScreen","jsx","_jsx","SCREENS","HOME","ADD_MONEY","SELECT_RECIPIENT","ENTER_AMOUNT","CONFIRM_TRANSFER","RECEIPT","App","currentScreen","setCurrentScreen","balance","setBalance","selectedRecipient","setSelectedRecipient","transferAmount","setTransferAmount","lastTransfer","setLastTransfer","savedBalance","localStorage","getItem","parseFloat","setItem","toString","navigateToScreen","screen","handleAddMoney","amount","prevBalance","handleSelectRecipient","recipient","handleEnterAmount","handleConfirmTransfer","newBalance","transfer","id","Date","now","date","operationNumber","Math","floor","random","identificationCode","substring","toUpperCase","handleBackToHome","handleScanQR","alert","renderScreen","onAddMoney","onTransfer","onScanQR","onConfirm","onBack","onSelectRecipient","className","children"],"sources":["/workspace/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport HomeScreen from './components/HomeScreen';\nimport AddMoneyScreen from './components/AddMoneyScreen';\nimport SelectRecipientScreen from './components/SelectRecipientScreen';\nimport EnterAmountScreen from './components/EnterAmountScreen';\nimport ConfirmTransferScreen from './components/ConfirmTransferScreen';\nimport ReceiptScreen from './components/ReceiptScreen';\n\nconst SCREENS = {\n  HOME: 'home',\n  ADD_MONEY: 'add_money',\n  SELECT_RECIPIENT: 'select_recipient',\n  ENTER_AMOUNT: 'enter_amount',\n  CONFIRM_TRANSFER: 'confirm_transfer',\n  RECEIPT: 'receipt'\n};\n\nfunction App() {\n  const [currentScreen, setCurrentScreen] = useState(SCREENS.HOME);\n  const [balance, setBalance] = useState(1106900.63);\n  const [selectedRecipient, setSelectedRecipient] = useState(null);\n  const [transferAmount, setTransferAmount] = useState(0);\n  const [lastTransfer, setLastTransfer] = useState(null);\n\n  // Cargar datos del localStorage al iniciar\n  useEffect(() => {\n    const savedBalance = localStorage.getItem('balance');\n    if (savedBalance) {\n      setBalance(parseFloat(savedBalance));\n    }\n  }, []);\n\n  // Guardar balance en localStorage cuando cambie\n  useEffect(() => {\n    localStorage.setItem('balance', balance.toString());\n  }, [balance]);\n\n  const navigateToScreen = (screen) => {\n    setCurrentScreen(screen);\n  };\n\n  const handleAddMoney = (amount) => {\n    setBalance(prevBalance => prevBalance + amount);\n    setCurrentScreen(SCREENS.HOME);\n  };\n\n  const handleSelectRecipient = (recipient) => {\n    setSelectedRecipient(recipient);\n    setCurrentScreen(SCREENS.ENTER_AMOUNT);\n  };\n\n  const handleEnterAmount = (amount) => {\n    setTransferAmount(amount);\n    setCurrentScreen(SCREENS.CONFIRM_TRANSFER);\n  };\n\n  const handleConfirmTransfer = () => {\n    if (balance >= transferAmount) {\n      const newBalance = balance - transferAmount;\n      setBalance(newBalance);\n      \n      const transfer = {\n        id: Date.now(),\n        recipient: selectedRecipient,\n        amount: transferAmount,\n        date: new Date(),\n        operationNumber: Math.floor(Math.random() * 1000000000000) + 100000000000,\n        identificationCode: Math.random().toString(36).substring(2, 11).toUpperCase() + Math.random().toString(36).substring(2, 11).toUpperCase()\n      };\n      \n      setLastTransfer(transfer);\n      setCurrentScreen(SCREENS.RECEIPT);\n    }\n  };\n\n  const handleBackToHome = () => {\n    setCurrentScreen(SCREENS.HOME);\n    setSelectedRecipient(null);\n    setTransferAmount(0);\n    setLastTransfer(null);\n  };\n\n  const handleScanQR = () => {\n    // Simular apertura de c치mara\n    alert('Abriendo c치mara para escanear QR...');\n  };\n\n  const renderScreen = () => {\n    switch (currentScreen) {\n      case SCREENS.HOME:\n        return (\n          <HomeScreen \n            balance={balance}\n            onAddMoney={() => navigateToScreen(SCREENS.ADD_MONEY)}\n            onTransfer={() => navigateToScreen(SCREENS.SELECT_RECIPIENT)}\n            onScanQR={handleScanQR}\n          />\n        );\n      case SCREENS.ADD_MONEY:\n        return (\n          <AddMoneyScreen \n            onConfirm={handleAddMoney}\n            onBack={() => navigateToScreen(SCREENS.HOME)}\n          />\n        );\n      case SCREENS.SELECT_RECIPIENT:\n        return (\n          <SelectRecipientScreen \n            onSelectRecipient={handleSelectRecipient}\n            onBack={() => navigateToScreen(SCREENS.HOME)}\n          />\n        );\n      case SCREENS.ENTER_AMOUNT:\n        return (\n          <EnterAmountScreen \n            balance={balance}\n            onConfirm={handleEnterAmount}\n            onBack={() => navigateToScreen(SCREENS.SELECT_RECIPIENT)}\n          />\n        );\n      case SCREENS.CONFIRM_TRANSFER:\n        return (\n          <ConfirmTransferScreen \n            recipient={selectedRecipient}\n            amount={transferAmount}\n            balance={balance}\n            onConfirm={handleConfirmTransfer}\n            onBack={() => navigateToScreen(SCREENS.ENTER_AMOUNT)}\n          />\n        );\n      case SCREENS.RECEIPT:\n        return (\n          <ReceiptScreen \n            transfer={lastTransfer}\n            onBack={handleBackToHome}\n          />\n        );\n      default:\n        return (\n          <HomeScreen \n            balance={balance}\n            onAddMoney={() => navigateToScreen(SCREENS.ADD_MONEY)}\n            onTransfer={() => navigateToScreen(SCREENS.SELECT_RECIPIENT)}\n            onScanQR={handleScanQR}\n          />\n        );\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      {renderScreen()}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}